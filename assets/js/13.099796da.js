(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{383:function(e,a,t){"use strict";t.r(a);var s=t(42),n=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"ðŸš€-meta-data-commands"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ðŸš€-meta-data-commands"}},[e._v("#")]),e._v(" ðŸš€ Meta-Data commands")]),e._v(" "),t("p",[t("strong",[e._v("'Meta-data'")]),e._v(" commands are commands added in-line to the tree file which changes the function of that part of the language. For example, we have commands that stop the tree automatically going back to the top - and commands that help with spelling. For example, If you want to change create a command to go back you would type this in your file")]),e._v(" "),t("div",{staticClass:"language-Animals extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('\tDog\n\tCat\n\tBird\n\tGo Back <meta data-back-n-branch="1">\t   \t\t\t\n')])])]),t("p",[e._v("This is the "),t("strong",[e._v("Control data command - back-n-branch")]),e._v(". This means you can set an action on the press of this command to go back up "),t("strong",[e._v("n")]),e._v(" levels. Maybe one or two branches if necessary.")]),e._v(" "),t("p",[e._v("The following is an example markdown for a metadata in a node")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('I have something to say<meta data-audio="some/audio/file.mp3" auditory-cue="<TEXT>">\n')])])]),t("p",[e._v("It's the replacement text for utterance for cue")]),e._v(" "),t("h4",{attrs:{id:"stay-in-branch-commands"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stay-in-branch-commands"}},[e._v("#")]),e._v(" Stay in Branch commands")]),e._v(" "),t("p",[e._v("To stay in a branch simply add this at the top level item:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("<meta data-stay-in-branch>\n")])])]),t("p",[e._v("e.g.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("I would like<meta data-stay-in-branch>\n\tPizza\n\twith Cheese\n\twith Pepperoni \n")])])]),t("p",[e._v("To go back one level or several you can use use back-n-branch=N where N = number of branches to step back to. e.g.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('<meta data-back-n-branch="1" data-back-n-branch-notify>\n')])])]),t("p",[e._v("And lastly, to select an item and then exit use select-utterance")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("<meta data-select-utterance>\n")])])]),t("h4",{attrs:{id:"spell-metadata"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spell-metadata"}},[e._v("#")]),e._v(" Spell metadata")]),e._v(" "),t("p",[e._v("Spelling is possible. To start it you need a branch that defines a alphabet. So the root node should have "),t("code",[e._v("spell-branch")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("I'll spell it <meta data-spell-branch>\n")])])]),t("p",[e._v("To spell a letter use "),t("code",[e._v("spell-letter")]),e._v(" e.g. "),t("code",[e._v('<meta data-spell-letter=" ">')])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('spell-letter="<A LETTER>"\n')])])]),t("p",[e._v("It's the replacement for the text existed in that node. Instead this value will be added to list of letters")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("spell-finish\n")])])]),t("p",[e._v("The option to delete the last letter selected")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("spell-delchar\n")])])]),t("p",[e._v("The option to remove last inserted character in spelling queue")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("spell-branch\n")])])]),t("p",[e._v("Considers all leaf of that branch to be as spell letters, It used for defining where spell function should be used.")]),e._v(" "),t("h4",{attrs:{id:"spelling-with-prediction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spelling-with-prediction"}},[e._v("#")]),e._v(" Spelling with prediction")]),e._v(" "),t("p",[e._v("Firstly we need to tell pasco that there will be changes to the layout after each selection:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("<meta data-spell-branch  data-spell-update-dyn-onchange>\n")])])]),t("p",[e._v("Next we need to define some aspects of prediction. For "),t("em",[e._v("Word prediction")]),e._v(" we define it with "),t("code",[e._v("data-dyn=spell-word-prediction")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('<meta data-dyn="spell-word-prediction" data-words-file="trees/Spell_Prediction/bncfrequency.json" data-max-nodes="3" data-spell-finish data-predict-after-n-chars="3"\n')])])]),t("p",[e._v("We need to define a corpus to predict from. There are a range of Corpus' already in pasco (see "),t("a",{attrs:{href:"https://github.com/AceCentre/pasco/tree/master/html/trees/Spell_Prediction",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(" for some examples. These are effectively a list of words with their frequency.)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('data-words-file="trees/Spell_Prediction/bncfrequency.json" \n')])])]),t("p",[e._v("Next we say the number of predictions that are going to be presented:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('data-max-nodes="3" \n')])])]),t("p",[e._v("And lastly, we can define after how many letters are spelt before we get predictions:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('predict-after-n-chars="number"\n')])])]),t("p",[e._v("We can also use "),t("em",[e._v("next letter prediction")]),e._v(". This is done with "),t("code",[e._v("data-dyn=spell-letter-prediction")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('<meta data-dyn="spell-letter-prediction" data-words-file="trees/Spell_Prediction/bncfrequency.json">\n')])])]),t("p",[e._v("(A full example can be seen "),t("a",{attrs:{href:"https://raw.githubusercontent.com/AceCentre/pasco/master/html/trees/Spell_Prediction/en-GB-Spell_Prediction.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(")")]),e._v(" "),t("h4",{attrs:{id:"audio-metadata"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#audio-metadata"}},[e._v("#")]),e._v(" Audio metadata")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('audio="<PATH/TO/AUDIO/FILE>"\n')])])]),t("p",[e._v("Plays the selected audio for cue and main voice")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('cue-audio="<PATH/TO/AUDIO/FILE>"\n')])])]),t("p",[e._v("Plays the selected audio for cue voice")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('main-audio="<PATH/TO/AUDIO/FILE>"\n')])])]),t("p",[e._v("Plays the selected audio for main voice")])])}),[],!1,null,null,null);a.default=n.exports}}]);